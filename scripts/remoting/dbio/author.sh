#!/bin/bash

set -u -e

PSERVER_ADDR="127.0.0.1:8080"
PSERVER_AUTH=""
PSERVER_USER=""
PSERVER_PASSWORD=""
CONF_OWNER=""

function Usage {
    echo "Usage: $0 [<options>] <conf-name> <scenario-name>.scenario"
    echo " "
    echo "Where options include:"
    echo "  -o <owner>,            defaults to <user> or 'anonymous'"
    echo "  -s <server>[:<port>],  defaults to '127.0.0.1:8080'"
    echo "  -u <user>"
    echo "  -p <password>"
    echo " "
    echo " "
    echo "For Example:"
    echo "% $0 myLeanTabletApp segmentByOS.scenario"
    exit 1
}

while getopts ":s:u:p:o:" flag
do
    case "${flag}" in
        s)
            PSERVER_ADDR="${OPTARG}"
            ;;

        u)
            PSERVER_USER="${OPTARG}"
            ;;

        p)
            PSERVER_PASSWORD="${OPTARG}"
            ;;

        o)
            CONF_OWNER="${OPTARG}"
            ;;

        *)
            Usage
            ;;

    esac
done

shift $((OPTIND-1))

if [ $# -ne 2 ]; then
    Usage
fi

if [ "${CONF_OWNER}" == "" ]; then
    CONF_OWNER="${PSERVER_USER}"
    if [ "${CONF_OWNER}" == "" ]; then
        CONF_OWNER="anonymous"
    fi
fi

if [ "${PSERVER_USER}" == "" ]; then
    if [ "${PSERVER_PASSWORD}" != "" ]; then
        echo "$0: cannot specify password without user-name"
        exit 1
    fi
else
    if [ "${PSERVER_PASSWORD}" == "" ]; then
        echo "$0: cannot specify user-name without password"
        exit 1
    else
        PSERVER_AUTH="-u ${PSERVER_USER} -p ${PSERVER_PASSWORD}"
    fi
fi



CONF_NAME="${1}"
OUT_FILE="${2}"

SCENARIO_NAME="$(basename ${OUT_FILE} .scenario)"

if [ "${SCENARIO_NAME}" == "$(basename ${OUT_FILE})" ]; then
    echo "$0: Please use a '.scenario' file extension,"
    echo " e.g. ${OUT_FILE}.scenario"
    exit 1
fi

TEMP_DIR="/tmp/author_${SCENARIO_NAME}.$(date +%Y_%m_%d_%H_%M_%S)"

mkdir "${TEMP_DIR}"

echo " "
echo "Please describe the scenario you are recording."
echo "You may also want to specify the appropriate application and "
echo " run-time parameters"
echo " "
echo "To end inputting the scenario's description, please enter"
echo " two consecutive empty lines"
echo " "

emptyLine="no"

SCENARIO_DESC_FILE="${TEMP_DIR}/__scenario_desc__.txt"
touch "${SCENARIO_DESC_FILE}"

while true
do
    read sdesc

    if [ "x${sdesc}" == "x" ]; then
        if [ "${emptyLine}" == "yes" ]; then
            break;
        else
            emptyLine="yes"
        fi
    else
        emptyLine="no"
    fi

    echo "${sdesc}" >> "${SCENARIO_DESC_FILE}"
done
    
SCENARIO_FILE="${TEMP_DIR}/scenario.conf"

echo "# This is a scenario file generated by '$0'"  > "${SCENARIO_FILE}"
echo "# Persistence server is ${PSERVER_ADDR}" >> \
     "${SCENARIO_FILE}"

echo "# Creation time is $(date)"  >> "${SCENARIO_FILE}"
echo "# Configuration is ${CONF_NAME}" >> "${SCENARIO_FILE}"
echo "#" >> "${SCENARIO_FILE}"

while true
do
    echo "Enter file-name to export, 'x' to exit"
    read name

    if [ "${name}" == "x" ]; then
        tar cfz "${OUT_FILE}" -C "${TEMP_DIR}" .

        rm -rf "${TEMP_DIR}"

        echo "Scenario stored info ${OUT_FILE}"

        exit 0
    fi

    mdb="${TEMP_DIR}/${name}.mdb"

    ./dbio.sh export -s "${PSERVER_ADDR}" \
              -o "${CONF_OWNER}" \
              ${PSERVER_AUTH} \
              -f "${mdb}" \
              "${CONF_NAME}"
    
    echo "${name}:${name}.mdb" >> "${SCENARIO_FILE}"
done
